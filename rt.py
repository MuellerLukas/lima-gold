#!/bin/python
# -*- coding: utf-8 -*-
# vim:set ts=8 sts=8 sw=8 tw=80 noet cc=80:

# THIS IS A TEST FILE!
# The following program demostrates some of the Reg-Echses' powers:
# 000000-000001	defines a new command /kuh as an alias for /q
# 000003-000005	inflates a single # to 10 # with a loop
# 000006-000037	defines a new command /rot13

import rp

#program = [
#	('^/kuh\s*$', '/echo missing argument'),			# 000000
#	('^/kuh (.*)$', r'/q \1'),					# 000001
#	(r'\+', r'\$'),							# 000002
#	(r'^(#+)$', '$-6'),						# 000003
#	(r'^(#+)$', r'\1#'),						# 000004
#	(r'^#{10}$', '$-4'),						# 000005
#	('^/rot13\s*', '$-38'),						# 000006
#	('^/rot13\s*$', '/echo missing argument'),			# 000007
#	('^/rot13\s*', r'/rot13 ¸'),					# 000008
#	('^(/rot13 .*)¸a(.*)$', r'\1˞n\2'),				# 000009
#	('^(/rot13 .*)¸b(.*)$', r'\1˞o\2'),				# 000010
#	('^(/rot13 .*)¸c(.*)$', r'\1˞p\2'),				# 000011
#	('^(/rot13 .*)¸d(.*)$', r'\1˞q\2'),				# 000012
#	('^(/rot13 .*)¸e(.*)$', r'\1˞r\2'),				# 000013
#	('^(/rot13 .*)¸f(.*)$', r'\1˞s\2'),				# 000014
#	('^(/rot13 .*)¸g(.*)$', r'\1˞t\2'),				# 000015
#	('^(/rot13 .*)¸h(.*)$', r'\1˞u\2'),				# 000016
#	('^(/rot13 .*)¸i(.*)$', r'\1˞v\2'),				# 000017
#	('^(/rot13 .*)¸j(.*)$', r'\1˞w\2'),				# 000018
#	('^(/rot13 .*)¸k(.*)$', r'\1˞x\2'),				# 000019
#	('^(/rot13 .*)¸l(.*)$', r'\1˞y\2'),				# 000020
#	('^(/rot13 .*)¸m(.*)$', r'\1˞z\2'),				# 000021
#	('^(/rot13 .*)¸n(.*)$', r'\1˞a\2'),				# 000022
#	('^(/rot13 .*)¸o(.*)$', r'\1˞b\2'),				# 000023
#	('^(/rot13 .*)¸p(.*)$', r'\1˞c\2'),				# 000024
#	('^(/rot13 .*)¸q(.*)$', r'\1˞d\2'),				# 000025
#	('^(/rot13 .*)¸r(.*)$', r'\1˞e\2'),				# 000026
#	('^(/rot13 .*)¸s(.*)$', r'\1˞f\2'),				# 000027
#	('^(/rot13 .*)¸t(.*)$', r'\1˞g\2'),				# 000028
#	('^(/rot13 .*)¸u(.*)$', r'\1˞h\2'),				# 000029
#	('^(/rot13 .*)¸v(.*)$', r'\1˞i\2'),				# 000030
#	('^(/rot13 .*)¸w(.*)$', r'\1˞j\2'),				# 000031
#	('^(/rot13 .*)¸x(.*)$', r'\1˞k\2'),				# 000032
#	('^(/rot13 .*)¸y(.*)$', r'\1˞l\2'),				# 000033
#	('^(/rot13 .*)¸z(.*)$', r'\1˞m\2'),				# 000034
#	('^(/rot13 .*)[¸˞](.)(.*)$', r'\1\2¸\3'),			# 000035
#	('^(/rot13 .*)¸$', '$-9'),					# 000036
#	('^/rot13 (.*)¸$', r'/say \1')					# 000037
#	]

# This program only implements a /rot13 command for lower case letters, that can
# be used in conjunction with a /p, /e or /q command.
# If you want to use this in the client, just copy the json output and write it
# in the config file like this:
# [regex_programs]
# default = <the-json-text>
program = [
	('^(?:/[peq] )?/rot13\s*', '$-33'),				# 000000
	('^(?:/[peq] )?/rot13\s*$', '/echo missing argument'),		# 000001
	('^(/[peq] )?/rot13\s*', r'\1/rot13 ¸'),			# 000002
	('^((?:/[peq] )?/rot13 .*)¸a(.*)$', r'\1˞n\2'),			# 000003
	('^((?:/[peq] )?/rot13 .*)¸b(.*)$', r'\1˞o\2'),			# 000004
	('^((?:/[peq] )?/rot13 .*)¸c(.*)$', r'\1˞p\2'),			# 000005
	('^((?:/[peq] )?/rot13 .*)¸d(.*)$', r'\1˞q\2'),			# 000006
	('^((?:/[peq] )?/rot13 .*)¸e(.*)$', r'\1˞r\2'),			# 000007
	('^((?:/[peq] )?/rot13 .*)¸f(.*)$', r'\1˞s\2'),			# 000008
	('^((?:/[peq] )?/rot13 .*)¸g(.*)$', r'\1˞t\2'),			# 000009
	('^((?:/[peq] )?/rot13 .*)¸h(.*)$', r'\1˞u\2'),			# 000010
	('^((?:/[peq] )?/rot13 .*)¸i(.*)$', r'\1˞v\2'),			# 000011
	('^((?:/[peq] )?/rot13 .*)¸j(.*)$', r'\1˞w\2'),			# 000012
	('^((?:/[peq] )?/rot13 .*)¸k(.*)$', r'\1˞x\2'),			# 000013
	('^((?:/[peq] )?/rot13 .*)¸l(.*)$', r'\1˞y\2'),			# 000014
	('^((?:/[peq] )?/rot13 .*)¸m(.*)$', r'\1˞z\2'),			# 000015
	('^((?:/[peq] )?/rot13 .*)¸n(.*)$', r'\1˞a\2'),			# 000016
	('^((?:/[peq] )?/rot13 .*)¸o(.*)$', r'\1˞b\2'),			# 000017
	('^((?:/[peq] )?/rot13 .*)¸p(.*)$', r'\1˞c\2'),			# 000018
	('^((?:/[peq] )?/rot13 .*)¸q(.*)$', r'\1˞d\2'),			# 000019
	('^((?:/[peq] )?/rot13 .*)¸r(.*)$', r'\1˞e\2'),			# 000020
	('^((?:/[peq] )?/rot13 .*)¸s(.*)$', r'\1˞f\2'),			# 000021
	('^((?:/[peq] )?/rot13 .*)¸t(.*)$', r'\1˞g\2'),			# 000022
	('^((?:/[peq] )?/rot13 .*)¸u(.*)$', r'\1˞h\2'),			# 000023
	('^((?:/[peq] )?/rot13 .*)¸v(.*)$', r'\1˞i\2'),			# 000014
	('^((?:/[peq] )?/rot13 .*)¸w(.*)$', r'\1˞j\2'),			# 000015
	('^((?:/[peq] )?/rot13 .*)¸x(.*)$', r'\1˞k\2'),			# 000016
	('^((?:/[peq] )?/rot13 .*)¸y(.*)$', r'\1˞l\2'),			# 000017
	('^((?:/[peq] )?/rot13 .*)¸z(.*)$', r'\1˞m\2'),			# 000018
	('^((?:/[peq] )?/rot13 .*)[¸˞](.)(.*)$', r'\1\2¸\3'),		# 000019
	('^((?:/[peq] )?/rot13 .*)¸$', '$-3'),				# 000030
	('^/rot13 (.*)¸$', r'/say \1'),					# 000031
	('^(/p|/q|/e) /rot13 (.*)¸$', r'\1 \2')				# 000032
	]

import json
print(json.dumps(program))
p = rp.compile(program)

for text in [ "/kuh", "/kuh ", "/echo bla", "/ku bla", "/kuh bla",
		"eine /kuh macht muh", "+", "#", "/rot13",
		"/rot13 hello, world!", "/p /rot13 blah"]:
	print("'%s' -> '%s'" % (text, rp.run(p, text)))
